{
    "name": "java-generate-setters-getters",
    "displayName": "Java Code Generators",
    "description": "Java Setter Getter toString Constructor hashCode equals fluent code snippets generator",
    "version": "4.2.0",
    "publisher": "sohibe",
    "license": "MIT",
    "keywords": [
        "java",
        "setter",
        "getter",
        "constructor",
        "toString"
    ],
    "engines": {
        "vscode": "^1.23.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/sohibegit/vscode-java-code-generator"
    },
    "categories": [
        "Programming Languages",
        "Snippets"
    ],
    "activationEvents": [
        "onCommand:extension.javaGenerateConstructor",
        "onCommand:extension.javaGenerateConstructorUsingAllFinalFields",
        "onCommand:extension.javaGenerateAll",
        "onCommand:extension.javaGenerateUsingGui"
    ],
    "main": "./out/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.javaGenerateConstructor",
                "title": "Java: Generate empty constructor"
            },
            {
                "command": "extension.javaGenerateConstructorUsingAllFinalFields",
                "title": "Java: Generate constructor using all final fields"
            },
            {
                "command": "extension.javaGenerateAll",
                "title": "Java: Generate all \"Quick\""
            },
            {
                "command": "extension.javaGenerateUsingGui",
                "title": "Java: Generator GUI"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "when": "resourceLangId == java",
                    "command": "extension.javaGenerateConstructor",
                    "group": "YourGroup@1"
                },
                {
                    "when": "resourceLangId == java",
                    "command": "extension.javaGenerateConstructorUsingAllFinalFields",
                    "group": "YourGroup@2"
                },
                {
                    "when": "resourceLangId == java",
                    "command": "extension.javaGenerateAll",
                    "group": "YourGroup@3"
                },
                {
                    "when": "resourceLangId == java",
                    "command": "extension.javaGenerateUsingGui",
                    "group": "YourGroup@4"
                }
            ]
        },
        "configuration": [
            {
                "title": "Java Code Generator Configurations",
                "properties": {
                    "java.code.generators.includeFluentWithSettersGetters": {
                        "type": "boolean",
                        "default": false,
                        "description": "Include Fluent Setters with Java: Generate Setters and Getters"
                    },
                    "java.code.generators.fluentMethodPrefix": {
                        "type": "string",
                        "default": "",
                        "description": "Use as prefix for the fluent methods (like with...)"
                    },
                    "java.code.generators.methodOpeningBraceOnNewLine": {
                        "type": "boolean",
                        "default": false,
                        "description": "put the method's opening brace on a new line instead of the same line"
                    },
                    "java.code.generators.generateEvenIfExists": {
                        "type": "boolean",
                        "default": false,
                        "description": "generate the code even if it's alrady exists"
                    },
                    "java.code.generators.onlyIdForHashAndEquals": {
                        "type": "boolean",
                        "default": false,
                        "description": "use id only with hashCode() and equals()"
                    },
                    "java.code.generators.onlyPrimitiveForToString": {
                        "type": "boolean",
                        "default": false,
                        "description": "use String, Primitive and Primitive Wrappers only for toString()"
                    }
                }
            }
        ]
    },
    "icon": "images/icon.png",
    "scripts": {
        "prettier": "prettier --write \"src/**/*.ts\"",
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/mocha": "^2.2.42",
        "@types/node": "^7.0.43",
        "husky": "1.3.1",
        "prettier": "1.15.3",
        "tslint": "5.12.0",
        "typescript": "^2.6.1",
        "vscode": "^1.1.21"
    },
    "husky": {
        "hooks": {
            "pre-commit": "prettier --write \"src/**/*.ts\""
        }
    },
    "dependencies": {
        "java-ast": "^0.1.0"
    }
}
